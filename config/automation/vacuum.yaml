---
- alias: Vacuum Start Cleaning Room
  id: vacuum_start_cleaning_room
  trigger:
    - platform: state
      entity_id: input_select.vacuum_room
      from: "Select Input"
  action:
    - service: script.vacuum_dispatch
      data_template:
        room: "{{ trigger.to_state.state }}"
    - service: input_select.select_option
      entity_id: input_select.vacuum_room
      data_template:
        option: "Select Input"
# Every monday start cleaning
- alias: Vacuum Clean on Monday
  id: vacuum_clean_monday
  trigger:
    - platform: time
      at: "10:00:00"
  condition:
    - condition: time
      weekday:
        - mon
  action:
    - service: vacuum.start
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
# Notify when Vacuum robot starts and ends.
- alias: Vacuum Robot Notify
  id: vacuum_robot_notify
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      from: ~
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: vacuum.xiaomi_vacuum_cleaner
              state: cleaning
          sequence:
            - alias: Notify
              service: notify.mobile_app_both_iphones
              data:
                message: "Vacuum Robot started cleaning"
        - conditions:
            - condition: state
              entity_id: vacuum.xiaomi_vacuum_cleaner
              state: error
          sequence:
            - alias: Notify
              service: notify.mobile_app_both_iphones
              data:
                message: "Vacuum Robot has an error"
        - conditions:
            - condition: state
              entity_id: vacuum.xiaomi_vacuum_cleaner
              state: docked
          sequence:
            - alias: Notify
              service: notify.mobile_app_both_iphones
              data:
                message: "Vacuum Robot returned to the dock"
# Scheduled cleaning when leaving.
- alias: Vacuum Started Cleaning when Leaving
  id: vacuum_started_clean_when_leaving
  trigger:
    - platform: state
      entity_id: binary_sensor.someone_home
      to: "off"
  condition:
    - alias: When on
      condition: state
      entity_id: input_boolean.vacuum_clean_when_leave_home
      state: "on"
    - alias: No guests at home
      condition: state
      entity_id: binary_sensor.guests_presence
      state: "off"
    - alias: Not have cleaned in last 12 hours
      condition: template
      value_template: >-
        {{ (
          as_timestamp(now()) - 
          as_timestamp(states('sensor.xiaomi_vacuum_cleaner_last_clean_end'))
          ) > 12*2600
        }}
    - alias: Vacuum Unused
      condition: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      state: docked
    - alias: At reasonable hours
      condition: time
      after: "08:00:00"
      before: "19:00:00"
  action:
    - service: vacuum.start
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
- alias: Vacuum Go To Bin After Cleaning
  id: vacuum_go_to_bin_after_cleaning
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: docked
  condition:
    - condition: numeric_state
      entity_id: sensor.xiaomi_vacuum_cleaner_last_clean_duration
      above: 300 # 5 minutes
    - alias: Last clean just finished
      condition: template
      value_template: >-
        {{ (
          as_timestamp(now()) - 
          as_timestamp(states('sensor.xiaomi_vacuum_cleaner_last_clean_end'))
          ) < 300
        }}
  action:
    - service: script.turn_on
      target:
        entity_id: script.vacuum_to_empty_bin
