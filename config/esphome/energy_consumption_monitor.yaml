---
substitutions:
  disp_name: Energy Meter
  # Interval of how often the power is updated
  update_time: 10s
  # Current Transformers:
  #  20A/25mA SCT-006: 11143
  #  30A/1V SCT-013-030: 8650
  #  50A/1V SCT-013-050: 15420
  #  80A/26.6mA SCT-010: 41660
  #  100A/50ma SCT-013-000: 27518
  #  120A/40mA: SCT-016: 41787
  #  200A/100mA SCT-024: 27518
  current_cal: "8650"
  # Jameco 9VAC Transformer: 42620
  voltage_cal: "14517"

esphome:
  name: energy-consumption-monitor
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_iot_name
  password: !secret wifi_iot_password

  manual_ip:
    static_ip: 10.4.6.1
    gateway: 10.4.0.1
    subnet: 255.255.0.0
    dns1: 1.1.1.1
    dns2: 8.8.8.8

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Energy Monitor Fallback Hotspot"
    password: !secret ap_fallback_password

captive_portal:

# Enable logging
logger:

ota:
  password: !secret esphome_ota_password

api:
  password: !secret esphome_api_password
  encryption:
    key: !secret esphome_api_encryption_key


web_server:
  port: 80

spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23

sensor:
  - platform: wifi_signal
    name: ${disp_name} WiFi Signal Strength
    update_interval: 60s
  - platform: uptime
    name: ${disp_name} Uptime
  # IC1
  - platform: atm90e32
    cs_pin: 5
    phase_a:
      voltage:
        name: ${disp_name} Volts A
        id: ic1Volts
        accuracy_decimals: 1
        # filters:
        #   - multiply: 2.0
      current:
        name: ${disp_name} CT1 Amps
        id: ct1Amps
      # The max value for current that the meter can output is 65.535. If you
      # expect to measure current over 65A, divide the gain_ct by 2 (120A CT) or
      # 4 (200A CT) and multiply the current value by 2 or 4 by uncommenting the
      # filter below
      #        filters:
      #          - multiply: 2.0
      gain_voltage: ${voltage_cal}
      # Voltage using a 9VAC power transformer
      # Note: If you can not get the voltage correct with the highest gain of
      # 65535, uncomment the 2.0 multiply filter above and lower the gain as
      # needed
      gain_ct: ${current_cal}
    phase_b:
      current:
        name: ${disp_name} CT2 Amps
        id: ct2Amps
      gain_ct: ${current_cal}
    phase_c:
      current:
        name: ${disp_name} CT3 Amps
        id: ct3Amps
      gain_ct: ${current_cal}
    frequency:
      name: ${disp_name} Freq A
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: ${update_time}
  # IC2
  - platform: atm90e32
    cs_pin: 4
    phase_a:
      voltage:
        name: ${disp_name} Volts B
        id: ic2Volts
        accuracy_decimals: 1
      current:
        name: ${disp_name} CT4 Amps
        id: ct4Amps
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    phase_b:
      current:
        name: ${disp_name} CT5 Amps
        id: ct5Amps
      gain_ct: ${current_cal}
    phase_c:
      current:
        name: ${disp_name} CT6 Amps
        id: ct6Amps
      gain_ct: ${current_cal}
    frequency:
      name: ${disp_name} Freq B
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: ${update_time}

  # Watts per channel
  - platform: template
    name: ${disp_name} CT1 Watts
    id: ct1Watts
    lambda: return id(ct1Amps).state * id(ic1Volts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
  - platform: template
    name: ${disp_name} CT2 Watts
    id: ct2Watts
    lambda: return id(ct2Amps).state * id(ic1Volts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
  - platform: template
    name: ${disp_name} CT3 Watts
    id: ct3Watts
    lambda: return id(ct3Amps).state * id(ic1Volts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
  - platform: template
    name: ${disp_name} CT4 Watts
    id: ct4Watts
    lambda: return id(ct4Amps).state * id(ic2Volts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
    internal: true
  - platform: template
    name: ${disp_name} CT5 Watts
    id: ct5Watts
    lambda: return id(ct5Amps).state * id(ic2Volts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
    internal: true
  - platform: template
    name: ${disp_name} CT6 Watts
    id: ct6Watts
    lambda: return id(ct6Amps).state * id(ic2Volts).state;
    accuracy_decimals: 0
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
    internal: true
  # Total Amps
  - platform: template
    name: ${disp_name} Total Amps
    id: totalAmps
    lambda: >-
      return
        id(ct1Amps).state +
        id(ct2Amps).state +
        id(ct3Amps).state +
        id(ct4Amps).state +
        id(ct5Amps).state +
        id(ct6Amps).state;
    accuracy_decimals: 2
    unit_of_measurement: A
    icon: "mdi:flash"
    update_interval: ${update_time}
  # Total Watts
  - platform: template
    name: ${disp_name} Total Watts
    id: totalWatts
    lambda: return id(totalAmps).state * id(ic1Volts).state;
    accuracy_decimals: 1
    unit_of_measurement: W
    icon: "mdi:flash-circle"
    update_interval: ${update_time}
  # kWh
  - platform: total_daily_energy
    name: ${disp_name} Total kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: totalWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
  - platform: total_daily_energy
    name: ${disp_name} CT1 kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: ct1Watts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
  - platform: total_daily_energy
    name: ${disp_name} CT2 kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: ct2Watts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
  - platform: total_daily_energy
    name: ${disp_name} CT3 kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: ct3Watts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
  - platform: total_daily_energy
    name: ${disp_name} CT4 kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: ct4Watts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    internal: true
  - platform: total_daily_energy
    name: ${disp_name} CT5 kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: ct5Watts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    internal: true
  - platform: total_daily_energy
    name: ${disp_name} CT6 kWh
    device_class: "energy"
    state_class: "total_increasing"
    power_id: ct6Watts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    internal: true

switch:
  - platform: restart
    name: ${disp_name} Restart
time:
  - platform: homeassistant
    id: homeassistant_time
